//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Entidades
{
    public partial class Grupo
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual string Nombre
        {
            get;
            set;
        }
    
        public virtual int IDCurso
        {
            get { return _iDCurso; }
            set
            {
                if (_iDCurso != value)
                {
                    if (Curso != null && Curso.ID != value)
                    {
                        Curso = null;
                    }
                    _iDCurso = value;
                }
            }
        }
        private int _iDCurso;
    
        public virtual string Carrera
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Curso Curso
        {
            get { return _curso; }
            set
            {
                if (!ReferenceEquals(_curso, value))
                {
                    var previousValue = _curso;
                    _curso = value;
                    FixupCurso(previousValue);
                }
            }
        }
        private Curso _curso;
    
        public virtual ICollection<Horario> Horario
        {
            get
            {
                if (_horario == null)
                {
                    var newCollection = new FixupCollection<Horario>();
                    newCollection.CollectionChanged += FixupHorario;
                    _horario = newCollection;
                }
                return _horario;
            }
            set
            {
                if (!ReferenceEquals(_horario, value))
                {
                    var previousValue = _horario as FixupCollection<Horario>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupHorario;
                    }
                    _horario = value;
                    var newValue = value as FixupCollection<Horario>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupHorario;
                    }
                }
            }
        }
        private ICollection<Horario> _horario;

        #endregion

        #region Association Fixup
    
        private void FixupCurso(Curso previousValue)
        {
            if (previousValue != null && previousValue.Grupo.Contains(this))
            {
                previousValue.Grupo.Remove(this);
            }
    
            if (Curso != null)
            {
                if (!Curso.Grupo.Contains(this))
                {
                    Curso.Grupo.Add(this);
                }
                if (IDCurso != Curso.ID)
                {
                    IDCurso = Curso.ID;
                }
            }
        }
    
        private void FixupHorario(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Horario item in e.NewItems)
                {
                    item.Grupo = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Horario item in e.OldItems)
                {
                    if (ReferenceEquals(item.Grupo, this))
                    {
                        item.Grupo = null;
                    }
                }
            }
        }

        #endregion

    }
}
